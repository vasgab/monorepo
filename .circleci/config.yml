version: 2.1

executors:
  cloud-sdk:
    docker:
      - image: google/cloud-sdk

commands:
  bds:
    description: "Build and deploy service"
    parameters:
      service_name:
        type: string
        default: "autenticacion"
      env:
        type: string
        default: "dev"

    steps:
      - run:
          name: EXPORT-build-vars-<< parameters.service_name >>
          command: |
            echo 'export SERVICE="<< parameters.service_name >>"' >> $BASH_ENV
            echo 'export ENV="<< parameters.env >>"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: BUILD-<< parameters.service_name >>
          command: |
            echo "service " ${SERVICE}
            echo "entorno " ${ENV}
            LATEST_COMMIT=$(git rev-parse HEAD)
            FOLDER_COMMIT=$(git log -1 --format=format:%H --full-diff ${SERVICE})

            echo "LATEST_COMMIT: " $LATEST_COMMIT
            echo "FOLDER_COMMIT: " $FOLDER_COMMIT
            if [[ $LATEST_COMMIT = $FOLDER_COMMIT ]];
            then
              echo "this folder ${SERVICE} was updated, add build code in this section"
              echo IMAGE-${SERVICE}=333.ecr.aws:IMAGE-${SERVICE} > workspace/${SERVICE}.IMAGE
              echo cat /workspace/${SERVICE}.IMAGE
            else
              echo "DO NOT BUILD"
            fi
      - persist_to_workspace:
          root: .
          paths:
              - workspace

      # - run:
      #     name: DEPLOY-<< parameters.service_name >>
      #     command: |
      #       echo "folder " ${SERVICE}
      #       LATEST_COMMIT=$(git rev-parse HEAD)
      #       FOLDER_COMMIT=$(git log -1 --format=format:%H --full-diff ${SERVICE})

      #       echo "LATEST_COMMIT: " $LATEST_COMMIT
      #       echo "FOLDER_COMMIT: " $FOLDER_COMMIT
      #       if [[ $LATEST_COMMIT = $FOLDER_COMMIT ]];
      #       then
      #         echo "this service ${SERVICE} was built, add deploy code in this section"
      #       else
      #         echo "DO NOT DEPLOY"
      #         sleep 5
      #       fi

  deploy:
    description: "Deploy Service in K8S"
    parameters:
      service_name:
        type: string
        default: "autenticacion"
      env:
        type: string
        default: "dev"
    steps:
      - attach_workspace:
          at: .
      - run:
          name: EXPORT-deploy-vars-<< parameters.service_name >>
          command: |
            echo 'export SERVICE="<< parameters.service_name >>"' >> $BASH_ENV
            echo 'export ENV="<< parameters.env >>"' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: DEPLOY-<< parameters.service_name >>
          command: |
            echo "DEPLOY Service: "<< parameters.service_name >>
            ls -l
            pwd
            echo cat /workspace/services-images
            echo "Entorno: " $ENV



jobs:
  build-deploy-master:
    executor: cloud-sdk
    #parallelism: 2  (remove the comment to schedule steps in parallel - depends on the account plan!)
    steps:
      - checkout
      - bds:
          service_name: "autenticacion"
          env: "prod"
      - bds:
          service_name: "clientes"
          env: "prod"
      - bds:
          service_name: "piscinas"
          env: "prod"

  deploy-service-master:
    executor: cloud-sdk
    steps:
      #- checkout
      - deploy:
          service_name: "autenticacion"
          env: "prod"
      - deploy:
          service_name: "clientes"
          env: "prod"
      - deploy:
          service_name: "piscinas"
          env: "prod"



workflows:
  version: 2
  build-deploy:
    jobs:
      - build-deploy-master:
          filters:
            branches:
              only: develop
      - deploy-service-master:
          filters:
            branches:
              only: develop
          requires:
            - build-deploy-master
